% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Session.R
\docType{class}
\name{Session-class}
\alias{Session}
\alias{Session-class}
\title{SB object that encapsulates a session}
\description{
SB object that encapsulates a session
}
\section{Fields}{

\describe{
\item{\code{artifact_loc}}{String location pointing to the model artifact.}

\item{\code{modelBuilt}}{Indication for whether only a feature search was performed or a full model was created.}
}}
\section{Methods}{

\describe{
\item{\code{enrich(data, featureCount = NA)}}{Returns a data frame containing the enrichedData. \code{data} is a dataframe to be enriched.}

\item{\code{enrich.file(file, featureCount = NA)}}{Returns a data frame containing the enrichedData. \code{data} is a path to the file to be enriched.}

\item{\code{evaluate()}}{Returns an evaluation object containing various information on the run including evaluation metric that was used, evaluation score, precision, confusion matrix, number of correct and incorrect instances, AUC information and more.}

\item{\code{features()}}{Returns a dataset with top feature information}

\item{\code{initialize(artifact_loc, modelBuilt = FALSE)}}{initializes a session using a string provided as \code{loc}.}

\item{\code{liftFromPrediction(data, labelColumn, probabilityColumn, desiredClass,
  title = NA, percentOfPopulationToPlot = 0.1)}}{Returns lift from a created model and generates three plots. \code{data} is a dataframe to be analyzed, \code{labelColumn} name of column containing the label, \code{probabilityColumn} name of probability column, \code{desiredClass} the class in the label column to check the lift for (e.g. '1'), \code{title} optional: a title for the plot. \code{percentOfPopulationToPlot} optional: limit the plot to the top percent of the data (x axis).}

\item{\code{predict(data)}}{Returns prediction on a created model. \code{data} is a dataframe to be predicted.}

\item{\code{predict.file(file)}}{Returns prediction on a created model. \code{file} is the path of the file to be predicted.}

\item{\code{showConfusionMatrix(normalized = FALSE)}}{Shows a confusion matrix of a model.}

\item{\code{showExtractors()}}{Shows extractors.}

\item{\code{showFeatureClusters()}}{Shows the representative feature clusters pdf report.}

\item{\code{showFeaturesTest()}}{Shows features performance on test.}

\item{\code{showFeaturesTrain()}}{Shows features performance on train.}

\item{\code{showFields()}}{Shows fields.}

\item{\code{showFunctions()}}{Shows functions.}

\item{\code{showInputSchema()}}{Shows the input schema.}

\item{\code{showModelComparison()}}{Shows cross validation of various algorithms tested to create a model.}

\item{\code{showROC()}}{Shows ROC of the model.}

\item{\code{showROC_CV()}}{Shows ROC of cross validation of various algorithms tested to create a model.}

\item{\code{showReport(report_name = NA)}}{\code{report_name} should be one of the following: confusionMatrix, confusionMatrix_normalized, extractor, train_features, train_unweighted_features, test_unweighted_features,field, function, InputSchema, modelComparison, roc_best, roc_CV}

\item{\code{status()}}{Checking the status of the session.}

\item{\code{waitForProcess()}}{Blocking the R console until session is finished.}
}}
\examples{
# Learning example
session = learn("titanic", getTitanicData(train = TRUE), target="survived",algorithmsWhiteList = list("RRandomForest"))
#session = featureSearch("titanic", getTitanicData(train = TRUE), target="survived")
enriched = session$enrich(getTitanicData(train = FALSE), featureCount = 10)
colnames(enriched)
predicted = session$predict(getTitanicData(train = FALSE))
colnames(predicted)
predicted[1:5,c("survived_predicted", "X_0_probability", "X_1_probability")]
eval = session$evaluate()
#session$showFeatures()
#session$showConfusionMatrix()
}

