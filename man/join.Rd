% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complexTypes.R
\name{join}
\alias{join}
\title{join}
\usage{
join(x, y, by, all = FALSE, all.x = all, all.y = all, suffixes = c(".x",
  ".y"))
}
\arguments{
\item{x, }{y: data tables. y is coerced to a data.table if it isn't one already.}

\item{all:}{logical; all = TRUE is shorthand to save setting both all.x = TRUE and all.y = TRUE.}

\item{all.x:}{logical; if TRUE, then extra rows will be added to the output, one for each row in x that has no matching row in y. These rows will have 'NA's in those columns that are usually filled with values from y. The default is FALSE, so that only rows with data from both x and y are included in the output.}

\item{all.y:}{logical; analogous to all.x above.}

\item{suffixes:}{A character(2) specifying the suffixes to be used for making non-by column names unique. The suffix behavior works in a similar fashion as the \code{\link[base]{merge}} method does.}
}
\value{
if the input \code{data} is a dataframe than a dataframe with the excluded columns will be return. If the input \code{data} is a data.table object, nothing will be returned and the input object will be modified.
}
\description{
Joins two dataframes. Wrapper around data.table's \code{\link[data.table]{merge}}. It is required that the join will be on a unique set of keys, and that the join key columns will have the same name in both inputs.
}
\examples{
data1 = data.table(id=1:2, text=c("a","b"))
data2 = data.table(id=rep(1:2,each=3), num=1:6)
grouped2 = groupBy(data2, "id")
join(data1,grouped2,"id")
}

